
This project aims to put hook on functions used by the disk encryption software VeraCrypt.exe (https://veracrypt.fr/en/Home.html).

It works in 3 stages, and each stage has its own file.

Stage 1: API Hooking (hook.cpp)

This is the final stage of the process, its considered stage 1 as it will be encapsulated by the next two executables.
This PE simply hooks onto some functions used by VeraCrypt to validate user passwords, and saves the passwords in a text file
on disk. This stage is compiled as a dll, prepared as shellcode for reflective loading using either source or binary loading,
and placed in the next stage as a payload. 

Stage 2: Migrating and injecting (migrateInject.cpp)

This stage will be injected by stage 3 into x32 OneDrive.exe. VeraCrypt is a x64 application, so this module migrates into x64 space
in order to inject the payload (hook.dll) into VeraCrypt. This stage is compiled as a dll, prepared as shellcode
for reflective loading using either source or binary loading, and placed in the next stage as a payload. 

Step 3: Initial virus

This is the final stage, migrateInject.dll shellcode is injected into OneDrive.exe. It is compiled as an exe and placed in the user
startup folder. 

Please note that this is all for educational purposes, just wanted to improve my methodology and understanding of 
all the things I've learnt till now. If you're looking to do something bad this won't do you any good..