// custom structure to hold the required pointers & details of each section in memory.. read the loader file to learn more
typedef struct _COFF_INMEMORY {
	uint16_t Index; // section number
	uint64_t InMemoryAddress;
	uint64_t PointerToRelocations;
 	uint16_t NumberOfRelocations;
} COFF_INMEMORY, *PCOFF_INMEMORY;


typedef struct _COFF_SYMBOL {
	uint32_t	Index;					// position in symbol table 
	char		Name[100];
	uint16_t	SectionNumber;			// section number
	uint32_t	Value;					// offset inside section containing symbol	
	uint8_t		StorageClass;			// symbol storage class
	uint64_t	InMemoryAddress;		// address of the symbol in memory
	uint64_t	GOTaddress;				// address of the symbol in Global Offset Table
} COFF_SYMBOL;


typedef struct _COFF_HEADER {
	uint16_t Machine;
	uint16_t NumberOfSections;
	uint32_t TimeDateStamp;
	uint32_t PointerToSymbolTable;
	uint32_t NumberOfSymbols;
	uint16_t SizeOfOptionalHeader;
	uint16_t Characteristics;
} COFF_HEADER, *PCOFF_HEADER;

typedef struct __COFF_SECTION_HEADER {
	char Name[8];
	uint32_t VirtualSize;
	uint32_t VirtualAddress;
	uint32_t SizeOfRawData;
	uint32_t PointerToRawData;
	uint32_t PointerToRelocations;
	uint32_t PointerToLinenumfbers;
	uint16_t NumberOfRelocations;
	uint16_t NumberOfLinenumbers;
	uint32_t Characteristics;
} COFF_SECTION_HEADER, *PCOFF_SECTION_HEADER;

typedef struct __COFF_RELOCATION_HEADER {
	uint32_t VirtualAddress;
	uint32_t SymbolTableIndex;
	uint16_t Type;
} COFF_RELOCATION_HEADER, *PCOFF_RELOCATION_HEADER;

typedef struct __COFF_SYMBOL_TABLE {
	union {
		char ShortName[8];
		struct {
			uint32_t Zeros;
			uint32_t Offset;			
		};
	} Name;
	uint32_t Value;
	uint16_t SectionNumber;
	uint16_t Type;
	uint8_t StorageClass;
	uint8_t NumberOfAuxSymbols;
} COFF_SYMBOL_TABLE, *PCOFF_SYMBOL_TABLE;


